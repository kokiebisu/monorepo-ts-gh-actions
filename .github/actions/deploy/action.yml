name: Deploy

inputs:
  service-package-prefix:
    type: string
  api-package-prefix:
    type: string
  environment:
    required: true
  AWS_ACCESS_KEY_ID:
    required: true
  AWS_SECRET_ACCESS_KEY:
    required: true
  AWS_REGION:
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v2
      with:
        node-version: "14.17.3"

    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Add global deps
      run: yarn global add python make lerna@4.0.0 node-gyp@9.0.0 typescript@4.7.2 @types/jest
      shell: bash

    - name: Retreive node_modules cache
      id: node-modules-cache
      uses: actions/cache@v2
      with:
        path: "**/node_modules"
        key: node-modules-cache

    - name: Install dependencies
      run: yarn
      shell: bash
      if: steps.node-modules-cache.outputs.cache-hit != 'true'

    # - name: Download artifact
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: compiled-${{ inputs.package-name }}
    # - name: Deflate archive
    #     run: unzip -o archive-${{ inputs.package-name }}.zip

    - name: Retreive dist cache
      id: dist-cache
      uses: actions/cache@v2
      with:
        path: "**/dist/**"
        key: dist-cache

    - name: Build package
      run: lerna run build --scope=@coin-miles/${{ inputs.service-package-prefix }}-*
      shell: bash
      if: steps.dist-cache.outputs.cache-hit != 'true' && inputs.service-package-prefix

    - name: Build CLI package
      run: lerna run build --scope=@coin-miles/cli
      shell: bash
      if: steps.dist-cache.outputs.cache-hit != 'true' && inputs.service-package-prefix

    - name: Build API package
      run: lerna run build --scope=@coin-miles/${{ inputs.api-package-prefix }}-api
      shell: bash
      if: steps.dist-cache.outputs.cache-hit != 'true' && inputs.api-package-prefix

    - name: Deploy Lambdas for ${{ inputs.service-package-prefix }}-service
      run: ./deploy-ci.sh ${{ inputs.environment }}
      shell: bash
      working-directory: packages/${{ inputs.service-package-prefix }}-service
      if: inputs.service-package-prefix

    - name: Deploy Lambdas for ${{ inputs.api-package-prefix }}-api
      run: ./deploy-ci.sh ${{ inputs.environment }}
      shell: bash
      working-directory: packages/${{ inputs.api-package-prefix }}-api
      if: inputs.api-package-prefix
